// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class ExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, OCURLY=4, CCURLY=5, PLUS=6, MINUS=7, TIMES=8, 
		DIV=9, ASSIGN=10, End=11, Else=12, If=13, While=14, GT=15, LT=16, GE=17, 
		LE=18, EQ=19, NE=20, Say=21, Do=22, MOD=23, Number=24, Identifier=25, 
		String=26, WHITESPACE=27;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "OCURLY", "CCURLY", "PLUS", "MINUS", "TIMES", 
			"DIV", "ASSIGN", "End", "Else", "If", "While", "GT", "LT", "GE", "LE", 
			"EQ", "NE", "Say", "Do", "MOD", "Number", "Identifier", "String", "WHITESPACE", 
			"Int", "Digit", "Float"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", 
			"'='", "'end'", "'else'", "'if'", "'while'", "'>'", "'<'", "'>='", "'<='", 
			"'=='", "'!='", "'say'", "'do'", "'%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, "OCURLY", "CCURLY", "PLUS", "MINUS", "TIMES", 
			"DIV", "ASSIGN", "End", "Else", "If", "While", "GT", "LT", "GE", "LE", 
			"EQ", "NE", "Say", "Do", "MOD", "Number", "Identifier", "String", "WHITESPACE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00c5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r"+
		"\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0003\u0017~\b"+
		"\u0017\u0001\u0017\u0001\u0017\u0003\u0017\u0082\b\u0017\u0001\u0018\u0004"+
		"\u0018\u0085\b\u0018\u000b\u0018\f\u0018\u0086\u0001\u0019\u0001\u0019"+
		"\u0001\u0019\u0001\u0019\u0005\u0019\u008d\b\u0019\n\u0019\f\u0019\u0090"+
		"\t\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0005"+
		"\u0019\u0097\b\u0019\n\u0019\f\u0019\u009a\t\u0019\u0001\u0019\u0003\u0019"+
		"\u009d\b\u0019\u0001\u001a\u0004\u001a\u00a0\b\u001a\u000b\u001a\f\u001a"+
		"\u00a1\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0005"+
		"\u001b\u00a9\b\u001b\n\u001b\f\u001b\u00ac\t\u001b\u0003\u001b\u00ae\b"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0004\u001d\u00b3\b\u001d\u000b"+
		"\u001d\f\u001d\u00b4\u0001\u001d\u0001\u001d\u0005\u001d\u00b9\b\u001d"+
		"\n\u001d\f\u001d\u00bc\t\u001d\u0001\u001d\u0001\u001d\u0004\u001d\u00c0"+
		"\b\u001d\u000b\u001d\f\u001d\u00c1\u0003\u001d\u00c4\b\u001d\u0000\u0000"+
		"\u001e\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017"+
		"/\u00181\u00193\u001a5\u001b7\u00009\u0000;\u0000\u0001\u0000\t\u0002"+
		"\u0000AZaz\u0001\u0000\"\"\u0004\u0000\n\n\r\r\"\"\\\\\u0002\u0000\n\n"+
		"\r\r\u0001\u0000\'\'\u0004\u0000\n\n\r\r\'\'\\\\\u0003\u0000\t\n\r\r "+
		" \u0001\u000019\u0001\u000009\u00d0\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u0001=\u0001\u0000\u0000\u0000\u0003?\u0001\u0000\u0000\u0000\u0005"+
		"A\u0001\u0000\u0000\u0000\u0007C\u0001\u0000\u0000\u0000\tE\u0001\u0000"+
		"\u0000\u0000\u000bG\u0001\u0000\u0000\u0000\rI\u0001\u0000\u0000\u0000"+
		"\u000fK\u0001\u0000\u0000\u0000\u0011M\u0001\u0000\u0000\u0000\u0013O"+
		"\u0001\u0000\u0000\u0000\u0015Q\u0001\u0000\u0000\u0000\u0017U\u0001\u0000"+
		"\u0000\u0000\u0019Z\u0001\u0000\u0000\u0000\u001b]\u0001\u0000\u0000\u0000"+
		"\u001dc\u0001\u0000\u0000\u0000\u001fe\u0001\u0000\u0000\u0000!g\u0001"+
		"\u0000\u0000\u0000#j\u0001\u0000\u0000\u0000%m\u0001\u0000\u0000\u0000"+
		"\'p\u0001\u0000\u0000\u0000)s\u0001\u0000\u0000\u0000+w\u0001\u0000\u0000"+
		"\u0000-z\u0001\u0000\u0000\u0000/}\u0001\u0000\u0000\u00001\u0084\u0001"+
		"\u0000\u0000\u00003\u009c\u0001\u0000\u0000\u00005\u009f\u0001\u0000\u0000"+
		"\u00007\u00ad\u0001\u0000\u0000\u00009\u00af\u0001\u0000\u0000\u0000;"+
		"\u00c3\u0001\u0000\u0000\u0000=>\u0005;\u0000\u0000>\u0002\u0001\u0000"+
		"\u0000\u0000?@\u0005(\u0000\u0000@\u0004\u0001\u0000\u0000\u0000AB\u0005"+
		")\u0000\u0000B\u0006\u0001\u0000\u0000\u0000CD\u0005{\u0000\u0000D\b\u0001"+
		"\u0000\u0000\u0000EF\u0005}\u0000\u0000F\n\u0001\u0000\u0000\u0000GH\u0005"+
		"+\u0000\u0000H\f\u0001\u0000\u0000\u0000IJ\u0005-\u0000\u0000J\u000e\u0001"+
		"\u0000\u0000\u0000KL\u0005*\u0000\u0000L\u0010\u0001\u0000\u0000\u0000"+
		"MN\u0005/\u0000\u0000N\u0012\u0001\u0000\u0000\u0000OP\u0005=\u0000\u0000"+
		"P\u0014\u0001\u0000\u0000\u0000QR\u0005e\u0000\u0000RS\u0005n\u0000\u0000"+
		"ST\u0005d\u0000\u0000T\u0016\u0001\u0000\u0000\u0000UV\u0005e\u0000\u0000"+
		"VW\u0005l\u0000\u0000WX\u0005s\u0000\u0000XY\u0005e\u0000\u0000Y\u0018"+
		"\u0001\u0000\u0000\u0000Z[\u0005i\u0000\u0000[\\\u0005f\u0000\u0000\\"+
		"\u001a\u0001\u0000\u0000\u0000]^\u0005w\u0000\u0000^_\u0005h\u0000\u0000"+
		"_`\u0005i\u0000\u0000`a\u0005l\u0000\u0000ab\u0005e\u0000\u0000b\u001c"+
		"\u0001\u0000\u0000\u0000cd\u0005>\u0000\u0000d\u001e\u0001\u0000\u0000"+
		"\u0000ef\u0005<\u0000\u0000f \u0001\u0000\u0000\u0000gh\u0005>\u0000\u0000"+
		"hi\u0005=\u0000\u0000i\"\u0001\u0000\u0000\u0000jk\u0005<\u0000\u0000"+
		"kl\u0005=\u0000\u0000l$\u0001\u0000\u0000\u0000mn\u0005=\u0000\u0000n"+
		"o\u0005=\u0000\u0000o&\u0001\u0000\u0000\u0000pq\u0005!\u0000\u0000qr"+
		"\u0005=\u0000\u0000r(\u0001\u0000\u0000\u0000st\u0005s\u0000\u0000tu\u0005"+
		"a\u0000\u0000uv\u0005y\u0000\u0000v*\u0001\u0000\u0000\u0000wx\u0005d"+
		"\u0000\u0000xy\u0005o\u0000\u0000y,\u0001\u0000\u0000\u0000z{\u0005%\u0000"+
		"\u0000{.\u0001\u0000\u0000\u0000|~\u0005-\u0000\u0000}|\u0001\u0000\u0000"+
		"\u0000}~\u0001\u0000\u0000\u0000~\u0081\u0001\u0000\u0000\u0000\u007f"+
		"\u0082\u00037\u001b\u0000\u0080\u0082\u0003;\u001d\u0000\u0081\u007f\u0001"+
		"\u0000\u0000\u0000\u0081\u0080\u0001\u0000\u0000\u0000\u00820\u0001\u0000"+
		"\u0000\u0000\u0083\u0085\u0007\u0000\u0000\u0000\u0084\u0083\u0001\u0000"+
		"\u0000\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0084\u0001\u0000"+
		"\u0000\u0000\u0086\u0087\u0001\u0000\u0000\u0000\u00872\u0001\u0000\u0000"+
		"\u0000\u0088\u008e\u0007\u0001\u0000\u0000\u0089\u008d\b\u0002\u0000\u0000"+
		"\u008a\u008b\u0005\\\u0000\u0000\u008b\u008d\b\u0003\u0000\u0000\u008c"+
		"\u0089\u0001\u0000\u0000\u0000\u008c\u008a\u0001\u0000\u0000\u0000\u008d"+
		"\u0090\u0001\u0000\u0000\u0000\u008e\u008c\u0001\u0000\u0000\u0000\u008e"+
		"\u008f\u0001\u0000\u0000\u0000\u008f\u0091\u0001\u0000\u0000\u0000\u0090"+
		"\u008e\u0001\u0000\u0000\u0000\u0091\u009d\u0007\u0001\u0000\u0000\u0092"+
		"\u0098\u0007\u0004\u0000\u0000\u0093\u0097\b\u0005\u0000\u0000\u0094\u0095"+
		"\u0005\\\u0000\u0000\u0095\u0097\b\u0003\u0000\u0000\u0096\u0093\u0001"+
		"\u0000\u0000\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0097\u009a\u0001"+
		"\u0000\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000\u0098\u0099\u0001"+
		"\u0000\u0000\u0000\u0099\u009b\u0001\u0000\u0000\u0000\u009a\u0098\u0001"+
		"\u0000\u0000\u0000\u009b\u009d\u0007\u0004\u0000\u0000\u009c\u0088\u0001"+
		"\u0000\u0000\u0000\u009c\u0092\u0001\u0000\u0000\u0000\u009d4\u0001\u0000"+
		"\u0000\u0000\u009e\u00a0\u0007\u0006\u0000\u0000\u009f\u009e\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0006\u001a\u0000\u0000\u00a46\u0001\u0000\u0000"+
		"\u0000\u00a5\u00ae\u00050\u0000\u0000\u00a6\u00aa\u0007\u0007\u0000\u0000"+
		"\u00a7\u00a9\u00039\u001c\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9"+
		"\u00ac\u0001\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac"+
		"\u00aa\u0001\u0000\u0000\u0000\u00ad\u00a5\u0001\u0000\u0000\u0000\u00ad"+
		"\u00a6\u0001\u0000\u0000\u0000\u00ae8\u0001\u0000\u0000\u0000\u00af\u00b0"+
		"\u0007\b\u0000\u0000\u00b0:\u0001\u0000\u0000\u0000\u00b1\u00b3\u0003"+
		"9\u001c\u0000\u00b2\u00b1\u0001\u0000\u0000\u0000\u00b3\u00b4\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000"+
		"\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000\u00b6\u00ba\u0005.\u0000"+
		"\u0000\u00b7\u00b9\u00039\u001c\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000"+
		"\u00b9\u00bc\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00c4\u0001\u0000\u0000\u0000"+
		"\u00bc\u00ba\u0001\u0000\u0000\u0000\u00bd\u00bf\u0005.\u0000\u0000\u00be"+
		"\u00c0\u00039\u001c\u0000\u00bf\u00be\u0001\u0000\u0000\u0000\u00c0\u00c1"+
		"\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000\u00c1\u00c2"+
		"\u0001\u0000\u0000\u0000\u00c2\u00c4\u0001\u0000\u0000\u0000\u00c3\u00b2"+
		"\u0001\u0000\u0000\u0000\u00c3\u00bd\u0001\u0000\u0000\u0000\u00c4<\u0001"+
		"\u0000\u0000\u0000\u0010\u0000}\u0081\u0086\u008c\u008e\u0096\u0098\u009c"+
		"\u00a1\u00aa\u00ad\u00b4\u00ba\u00c1\u00c3\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}